--@name PropMeshRender
--@author Twig
--@shared
//Shared

if SERVER then
    //Server
    
else
    //Client
    local function propToMesh(ModelName,Material,offsetVector,booleanURL)
        local visualMeshes = mesh.getModelMeshes(ModelName)
        if visualMeshes[1]==nil then return end
        for k, v in ipairs(visualMeshes[1].triangles) do
            v.weights = nil
            if offsetVector then
                v.pos = v.pos+offsetVector
            end
        end
        
        local model = mesh.createFromTable(visualMeshes[1].triangles)
        if booleanURL then
            local mat = render.createMaterial(Material)
        else
            local mat = material.load(Material)
        end
        local a = {}
        a["Model"] = model
        a["Material"] = mat
        return a
    end
    //Usage: propToMesh(PropModelPath,Material,OptionalOffsetVector,OptionalBooleanURL[DefualtFalse])
    
    local function advDraw(DatTbl,Pos,Ang,Scale,isWorld)
        if DatTbl then
            local wrld = false
            if isWorld then
                wrld = true
            end
            
            local Mtrx = Matrix()
            local model = DatTbl["Model"]
            local mat = DatTbl["Material"]
            Mtrx:setTranslation(Pos)
            if Ang then
                Mtrx:setAngles(Ang)
            end
            if Scale then
                Mtrx:setScale(Scale)
            end
            render.pushMatrix(Mtrx,wrld)
            render.setMaterial(mat)
            model:draw()
            render.popMatrix()
        end
    end
    // Usage: advDraw(PropToMeshTable,VectorPosition,Angle,OptionalScaleVector,OptionalBooleanWorld)
    
    prop1 = propToMesh("models/props_c17/oildrum001.mdl","models/props_c17/oil_drum001a")
    prop2 = propToMesh("models/props_c17/FurnitureWashingmachine001a.mdl","models/props_lab/cornerunit_cloud")
    prop3 = propToMesh("models/props_junk/TrafficCone001a.mdl","models/wireframe")
    prop4 = propToMesh("models/sprops/rectangles/size_6/rect_96x96x3.mdl","phoenix_storms/ps_grass")
    
    hook.add("render","",function()
        advDraw(prop1,Vector(230,512,256),Angle(90,0,90),Vector(5.5))
        advDraw(prop2,Vector(400,400,256),Angle(timer.systime()*20,0,90),Vector(5.5))
        advDraw(prop3,Vector(80,420,256),Angle(90,0,90),Vector(5.5))
        advDraw(prop4,Vector(256,512,256),Angle(90,0,90),Vector(5.5))
    end)
end
